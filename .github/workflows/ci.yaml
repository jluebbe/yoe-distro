name: Yoe Distro CI

on:
  push: {}
  pull_request: {}
  # allow rebuilding without a push
  workflow_dispatch: {}

jobs:
  build:
    name: Yoe Build
    # run on self-hosted runner for the main repo or if vars.BUILD_RUNS_ON is set
    runs-on: >-
      ${{
        (vars.BUILD_RUNS_ON != '' && fromJSON(vars.BUILD_RUNS_ON)) ||
        (github.repository == 'YoeDistro/yoe-distro' && fromJSON('["self-hosted", "forrest", "build"]')) ||
        'ubuntu-20.04'
      }}
    # abort if it seems that we're rebuilding too much
    timeout-minutes: 120
    steps:
      - name: Install required packages
        run: |
          sudo apt-get -q -y --no-install-recommends install podman uidmap containers-storage slirp4netns
      - name: Pull container
        run: |
          podman pull docker.io/yoedistro/yoe-build:bookworm-x86_64
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          #submodules: recursive
          #path: '${{ github.event.pull_request.head.sha }}'
      - name: Clone submodules
        run: |
           git submodule update --init --single-branch --reference /srv/shared-git/poky.git sources/poky || true
           git submodule update --init --single-branch --reference /srv/shared-git/meta-openembedded.git sources/meta-openembedded || true
           git submodule update --init --single-branch --reference /srv/shared-git/meta-freescale.git sources/meta-freescale || true
           git submodule update --init
      - name: Setup
        run: |
          echo export DOCKER="podman" > local.sh
          cp conf/local.conf.sample conf/local.conf
          echo IMAGE_CLASSES += \"testimage testsdk\" >> conf/local.conf
          echo INHERIT += \"report-error rm_work\" >> conf/local.conf
          #echo ERR_REPORT_SERVER = \"errors.yoctoproject.org\" >> conf/local.conf
          #echo ERR_REPORT_PORT = \"80\" >> conf/local.conf
          #echo ERR_REPORT_USERNAME = \"Drone Autobuilder\" >> conf/local.conf
          #echo ERR_REPORT_EMAIL = \"info@yoedistro.org\" >> conf/local.conf
          echo TOOLCHAIN = \"clang\" >> conf/local.conf
          echo BB_NUMBER_THREADS = \"16\" >> conf/local.conf
          echo PARALLEL_MAKE = \"-j 32\" >> conf/local.conf
          echo ZSTD_THREADS = \"8\" >> conf/local.conf
          echo XZ_THREADS = \"8\" >> conf/local.conf
          echo XZ_MEMLIMIT = \"20%\" >> conf/local.conf
          /bin/bash -c "sed -i -e 's/PACKAGE_FEED_URI.*$//' conf/site.conf"
          /bin/bash -c "sed -i -e 's/SDK_UPDATE_URL.*$//' conf/site.conf"
      - name: Initialize auto.conf
        run: |
          if [ -f ~/.yocto/auto.conf ]; then
            cp ~/.yocto/auto.conf conf/
          else
            echo 'SSTATE_MIRRORS = "file://.* https://github-runner.pengutronix.de/sstate-cache/PATH"' >> conf/auto.conf
            echo 'BB_SIGNATURE_HANDLER = "OEBasicHash"' >> conf/auto.conf
            echo 'BB_HASHSERVE = ""' >> conf/auto.conf
            echo 'OPKGBUILDCMD = "opkg-build -Z gzip -a -1n"' >> conf/auto.conf
            echo 'INHERIT += "rm_work"' >> conf/auto.conf
          fi
      - name: Build Image
        run: |
          /bin/bash -c ". ./envsetup.sh qemuarm64 && bitbake yoe-kiosk-image"
      - name: Test Image
        run: |
          export DISPLAY=":0"
          echo TESTIMAGE_AUTO:qemuall = \"1\" >> conf/local.conf
          /bin/bash -c ". ./envsetup.sh qemuarm64 && bitbake yoe-sdk-image"
      - name: Prepare results
        run: |
          /bin/bash -c ". ./envsetup.sh qemuarm64 && resulttool report build/tmp/log/oeqa"
      - name: Clean shared state
        run: |
          /bin/bash -c ". ./envsetup.sh qemuarm64 && ./sources/poky/scripts/sstate-cache-management.py -d --remove-orphans -y "
